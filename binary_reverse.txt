#include<stdio.h>
#include<math.h>
#include<windows.h>
#pragma warning (disable:4996)

int main()//二进制位翻转后的数
{
	int a = 0;
	int i = 0;
	long long u = 0;
	long long sum = 0;
	int k = 0;
	int arr[32] = { 0 };
	scanf("%d", &a);
	for (i = 0; i < 32; i++)
	{
		arr[i] = a % 2;
		a = a / 2;
	}
	for (i = 0,k = 31; i < 32; i++, k--)
	{
		u = (long long)pow(2.0, k);
		sum += arr[i] * u;	
	}
	printf("%lld", sum);

	system("pause");
	return 0;
}

int Add(int x, int y);
int Average(int x, int y);
int main()//利用二进制计算两数加法，两数平均值
{

	int a = 0;
	int b = 0;
	scanf("%d%d", &a, &b);
	int x = Add(a, b);
	int y = Average(a, b);
	printf("%d\n", x);
	printf("%d\n", y);
	system("pause");
	return 0;
}

int Add(int x, int y)
{
	int temp = 0;
	do{
		temp = x;
		x = x ^ y;
		y = temp & y;
		y <<= 1;
	} while (y);

		return x;
}

int Average(int x, int y)
{
	return Add((x ^ y) >> 1, x & y);
}


//找出只出现了一次的数字
#define num 11
int main()
{
	int arr[num] = { 1, 5, 3, 1, 3, 5, 7, 10, 7, 15, 10 };
	int i = 0;
	int j = 0;
	for (i = 0; i < num; i++)
	{
		for (j = i+1; j < num; j++)
		{
			if (0 == (arr[i] ^ arr[j]))
			{
				arr[j] = '\0';
				break;
			}
			if ((num-1) == j && arr[i] != '\0')
				printf("%d\n", arr[i]);
		}
	}

	system("pause");
	return 0;
}

int main()//反向输出一个单词序列
{
	char arr[20] = { "student a am i"};
	int i = 0;
	int j = 0;
	int k = 0;
	int p = -1;
	for (i = 0; i < 20; i++)
	{
		if (arr[i] != '\0')
			p++;
		else
			break;
	}
	while (p > 0 )
	{
		k = 0;
		for (i = p; i >=0; i--)
		{
			if (arr[i] == ' ')
				break;
			k++;
		}
		p = i-1;
		for (j = p+2; j < k+p+2; j++)
		{
			printf("%c", arr[j]);
		}
		printf("%c", arr[i]);
	}
	printf("\n");
	system("pause");
	return 0;
}