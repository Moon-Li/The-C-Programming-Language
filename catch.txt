//#include <unistd.h>
//#include <unistd.h>
//#include <pcap.h>
//#include <arpa/inet.h>
//#include <netinet/ip.h>
//#include <stdio.h>
//#include <stdlib.h>
//#include <string.h>
//
//
//
//int main(void)
//{
//	//找出第一个网卡，确定要抓的网卡
//	pcap_if_t *pcap_if;
//	char Error[1024];//保存错误信息
//	int r = pcap_findalldevs(&pcap_if, Error);
//	if (r == -1)
//	{
//		printf("网卡查找失败\n");
//		return -1;
//	}
//	printf("第一个网卡的名字是：%s\n", pcap_if[0].name);//打开这个网卡
//	pcap_t *dev = pcap_open_live(pcap_if[0].name, PCAP_ERRBUF_SIZE, 1, 100, Error);//网卡名，缓冲区大小，混杂模式，超时限定，
//	if (dev == NULL)
//	{
//		printf("网卡打开失败\n");
//		return -1;
//	}
//
//	//抓包
//	struct pcap_pkthdr hdr;//抓到的包的信息，长度等
//	const unsigned char *packet = pcap_next(dev, &hdr);//取出下一个可用的包
//
//	if (packet == NULL)
//	{
//		printf("抓包失败！");
//		pcap_close(dev);//将前面打开的设备关掉，释放空间，避免信息泄露
//	}
//
//	printf("包的长度是：%d\n", hdr.len);
//	printf("包的内容是：\n");
//	int i;
//	for (i = 0; i < hdr.len; i++)
//	{
//		printf("%02x ", packet[i]);
//	}
//	printf("下面开始分析\n\n");
//	printf("\n目的MAC地址：");
//	for (i = 0; i < 6; i++)
//	{
//		printf("%02x ", packet[i]);
//	}
//
//	printf("\n源MAC地址：");
//	for (i = 6; i < 12; i++)
//	{
//		printf("%02x ", packet[i]);
//	}
//
//	printf("\n上层协议类型：");
//	int sum = 0;
//	for (i = 12; i < 14; i++)
//	{
//		sum += (int)packet[i];
//	}
//	if (sum == 8)
//		printf("IP协议 \n");
//	else
//		printf("由Novell IPX发来 \n");
//	int x = packet[14];
//	int k = 0;
//	k = x % 16;
//	x = x - k;
//	x = x / 16;
//	if (x == 4)
//		printf("协议版本为IPv4\n");
//	if (x == 6)
//		printf("协议版本为IPv6\n");
//	int y = packet[14];
//	y = y % 16;
//	printf("IP首部长度为：%d\n", y);
//	printf("生存时间：%d\n", packet[22]);
//	printf("协议类型为：");
//	switch (packet[23])
//	{
//	case 1:
//		printf("ICMP\n");
//		break;
//	case 2:
//		printf("IGMP\n");
//		break;
//	case 4:
//		printf("IP\n");
//		break;
//	case 6:
//		printf("ICP\n");
//		break;
//	case 8:
//		printf("ICMP\n");
//		break;
//	case 9:
//		printf("IGP\n");
//		break;
//	case 17:
//		printf("UDP\n");
//		break;
//	case 41:
//		printf("IPv6\n");
//		break;
//	case 50:
//		printf("ESP\n");
//		break;
//	case 89:
//		printf("OSPF\n");
//		break;
//	}
//	printf("源地址：");
//	for (i = 26; i < 30; i++)
//	{
//		printf("%d.", packet[i]);
//	}
//	printf("\n目的地址：");
//	for (i = 30; i < 34; i++)
//	{
//		printf("%d.", packet[i]);
//	}
//	pcap_close(dev);
//}

#include<stdio.h>
#include<windows.h>

int main()
{
	printf("%c  ", 1);
	printf("%c  ", 2);
	printf("%c  ", 3);
	printf("%c  ", 4);
	printf("%c  ", 5);

	system("pause");
	return 0;
}