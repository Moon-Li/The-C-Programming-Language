//#############################
//			
//		题目：归并排序
//		日期：年月日
//		提交者：Ly
//
//#############################

#include <stdio.h>
#include <windows.h>
#include <stdlib.h>
#pragma warning (disable:4996)

void Merge(int* arr, int left, int mid, int right, int* tmp)
{
	int start = left;
	int left1 = left;
	int right1 = mid;
	int left2 = mid + 1;
	int right2 = right;
	while (left1 <= right1 && left2 <= right2)
	{
		if (arr[left1] <= arr[left2])
			tmp[start++] = arr[left1++];
		else
			tmp[start++] = arr[left2++];
	}
	if (left1 <= right1)
		memcpy(tmp + start, arr + left1, sizeof(int)* (right1 - left1 + 1));
	if (left2 <= right2)
		memcpy(tmp + start, arr + left2, sizeof(int)* (right2 - left2 + 1));
	memcpy(arr + left, tmp + left, sizeof(int)* (right - left + 1));
}

void mergeSort(int* arr, int left, int right,int* tmp)
{
	if (left >= right)
		return;
	int mid = (left + right) / 2;
	mergeSort(arr, left, mid, tmp);
	mergeSort(arr, mid + 1, right, tmp);
	Merge(arr, left, mid, right, tmp);
}

void outPut(int* arr, int size)
{
	for (int i = 0; i < size; i++)
	{
		printf("%d ", arr[i]);
	}
}

int main()
{
	int arr[10] = { 78, 2, -17, 34, -9, 0, 93, 11, -100, 46 };
	int size = sizeof(arr) / sizeof(arr[0]);
	outPut(arr, size);
	printf("\n");
	int* tmp = (int*)malloc(sizeof(int)* (size));
	mergeSort(arr, 0, size-1,tmp);
	free(tmp);
	outPut(arr,size);
	printf("\n");
	system("pause");
	return 0;
}