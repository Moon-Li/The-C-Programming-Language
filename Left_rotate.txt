/*
左旋k位输出数组
判断一个数组是否为另一个的左旋数组
*/
#include<stdio.h>
#include<windows.h>
#pragma warning (disable:4996)

//void Rotate(char b[], int m, int size);
//int main()//左旋数组
//{
//	char a[20] = { 0 };
//	int k = 0;
//	int i = 0;
//	gets(a);
//	scanf("%d", &k);
//	int sz = strlen(a);
//	Rotate(a, k, sz);
//	for (i = 0; i < sz; i++)
//	{
//		printf("%c", a[i]);
//	}
//
//	system("pause");
//	return 0;
//}
//void Rotate(char b[], int m, int size)//左旋数组变换
//{
//	int i = 0;
//	int j = 0;
//	for (i = 0; i < m; i++)
//	{
//		char tep = b[0];
//		for (j = 0; j < size; j++)
//		{
//			if (j != size-1)
//				b[j] = b[j + 1];
//			else
//				b[j] = tep;
//		}
//	}
//}

int main()//判断是否为左旋数组
{
	char a[20];
	char b[20];
	int i = 0;
	int j = 0;
	gets(a);
	fflush(stdin);
	gets(b);
	int flag1 = 0;
	int sz = strlen(a);
	for (i = 0; i < sz; i++)
	{
		int tep = a[0];
		int flag2 = 1;
		for (j = 0; j < 20; j++)
		{
			if (j != sz - 1)
				a[j] = a[j + 1];
			else
				a[j] = tep;
		}
		for (j = 0; j < sz; j++)
		{
			if (a[j] != b[j])
				flag2 = 0;
		}
		if (1 == flag2)
		{
			flag1 = 1;
			printf("最少左旋次数为：%d\n", i+1);//输出左旋位数
			break;
		}
	}
	if (flag1 == 0)
		printf("不是左旋数组");

	system("pause");
	return 0;
}